<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="CodeBehindClass.cs" Inherits="CodeBehindClass" ResponseEncoding="UTF-8" Encoding="utf-8"%>
<%-- 
Name:
Author: march3
Description: 
--%>
<%-- Assembly References --%>
<%@ Assembly Name="System" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%-- Namespace Imports --%>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>

<%@ Map Name="JavaAlias" Src="mysql-java-alias" %>

<%@ Property Name="SourceTables" Optional="True" Type="SchemaExplorer.TableSchemaCollection" Category="Database" Description="可以选择多张表." %>

<%@ Register Name="Service" Template="service.cst" MergeProperties="False" ExcludeProperties="" %>

<%		
	output();
%>

<script runat="template">
    public void output() {
        foreach(TableSchema table in SourceTables)
    	{
            String fileName = ServicePath + "\\" + GetPascalCaseName(table) + "Service.java";
            this.Response.WriteLine(new System.IO.FileInfo(fileName).FullName + "...");
            Service service = this.Create<Service>();
            service.SourceTable = table;
            service.Author = Author;
            service.TablePrefix = TablePrefix;
            service.NameSpace = NameSpace;
            RenderToFile(service,fileName);
        }
        this.Response.WriteLine("\r\nTotal " + SourceTables.Count + " generated successfull.");
    }

     public string GetJavaType(ColumnSchema col) {
        try{           
            return JavaAlias[col.NativeType];
        }catch(Exception ex){
            //Response.Write(col.NativeType.ToString()+ex.Message);
            return col.NativeType + "["+col.NativeType.ToString()+"]";
        }
    }
</script>