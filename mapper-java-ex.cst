<%@ CodeTemplate Language="C#" TargetLanguage="Java" Src="CodeBehindClass.cs" Inherits="CodeBehindClass" ResponseEncoding="UTF-8" Encoding="utf-8"%>
<%-- 
Name:
Author: march3
Description: 
--%>
<%-- Assembly References --%>
<%@ Assembly Name="System" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%-- Namespace Imports --%>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>

<%@ Map Name="JavaAlias" Src="mysql-java-alias" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Database" Description="只能选择一个表." %>
<%
ColumnSchema pkCol = GetPrimaryKey(SourceTable);
bool isIdentity = false;
if(pkCol != null)
    isIdentity = Boolean.Parse(pkCol.ExtendedProperties["CS_IsIdentity"].Value.ToString());

List<ColumnSchema> uniqueColumns = GetUniqueColumns(SourceTable);
string domainClassName = GetDomainClassName();
string domainVariableName = GetDomainVariableName();
ColumnSchema deleteCol = GetDeleteFlagColumn(SourceTable);
%>
package <%=MapperJavaPackage%>;
/**
 * @ <%=Author%> create in <%=System.DateTime.Now%> by Template
 * This class generated by Forever Web Rapid Framework Code Generator
 */
import java.util.List;
import java.util.Map;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import <%=ModelPackage%>.<%=domainClassName%>;

/**
 * 数据表： [<%=SourceTable.Name%>]
 * <%=SourceTable.Description %>
 * 自定义扩展写在这里
 */
@Mapper
public interface <%=domainClassName%>Mapper extends <%=domainClassName%>MapperBase {

}

<script runat="template">
    public override string GetFileName() {
        return GetDomainClassName() + "Mapper.java";
    }
    
    public string GetDomainClassName() {
        return GetPascalCaseName(SourceTable);
    }
    
    public string GetDomainVariableName() {
        return GetCamelCaseName(SourceTable);
    }
       
    public string GetJavaType(ColumnSchema col) {
        try{           
            return JavaAlias[col.NativeType];
        }catch(Exception ex){
            //Response.Write(col.NativeType.ToString()+ex.Message);
            return col.NativeType + "["+col.NativeType.ToString()+"]";
        }
    }
</script>